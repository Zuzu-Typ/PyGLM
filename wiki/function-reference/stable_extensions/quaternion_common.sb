\c\This file was generated using a tool\c\
\h1\quaternion_common methods\h1\
The following methods are all part of the \b\quaternion_common methods\b\.
Provides common functions for quaternion types.
\h2\Table of contents\h2\
\ul\
\-\\url #conjugate-function\\b\conjugate\b\ function\url\
\-\\url #lerp-function\\b\lerp\b\ function\url\
\-\\url #slerp-function\\b\slerp\b\ function\url\
\ul\
\h3\conjugate() function\h3\
\raw\#### <code>glm.<code>**conjugate**(**q**: *quat*) -\\> *quat*</code></code>\raw\
\raw\&emsp;&emsp;\raw\Returns the \code\q\code\ conjugate.

\h3\lerp() function\h3\
\raw\#### <code>glm.<code>**lerp**(**x**: *float*, **y**: *float*, **a**: *float*) -\\> *float*</code></code>\raw\
\raw\&emsp;&emsp;\raw\Returns \code\x * (1.0 - a) + y * a\code\, i.e., the linear blend of \code\x\code\ and \code\y\code\ using the
\raw\&emsp;&emsp;\raw\floating-point value \code\a\code\. The value for \code\a\code\ is not restricted to the range \code\[0, 1]\code\.

\raw\#### <code>glm.<code>**lerp**(**x**: *vecN*, **y**: *vecN*, **a**: *float*) -\\> *vecN*</code></code>\raw\
\raw\&emsp;&emsp;\raw\Returns \code\x * (1.0 - a) + y * a\code\, i.e., the linear blend of \code\x\code\ and \code\y\code\ using the
\raw\&emsp;&emsp;\raw\floating-point value \code\a\code\. The value for \code\a\code\ is not restricted to the range \code\[0, 1]\code\.

\raw\#### <code>glm.<code>**lerp**(**x**: *vecN*, **y**: *vecN*, **a**: *vecN*) -\\> *vecN*</code></code>\raw\
\raw\&emsp;&emsp;\raw\Returns \code\x * (1.0 - a) + y * a\code\, i.e., the linear blend of \code\x\code\ and \code\y\code\ using the
\raw\&emsp;&emsp;\raw\vector \code\a\code\. The value for \code\a\code\ is not restricted to the range \code\[0, 1]\code\.

\raw\#### <code>glm.<code>**lerp**(**x**: *quat*, **y**: *quat*, **a**: *float*) -\\> *quat*</code></code>\raw\
\raw\&emsp;&emsp;\raw\Linear interpolation of two quaternions. The interpolation is oriented.

\h3\slerp() function\h3\
\raw\#### <code>glm.<code>**slerp**(**x**: *quat*, **y**: *quat*, **a**: *float*) -\\> *quat*</code></code>\raw\
\raw\&emsp;&emsp;\raw\Spherical linear interpolation of two quaternions. The interpolation always take the short
\raw\&emsp;&emsp;\raw\path and the rotation is performed at constant speed.

\raw\#### <code>glm.<code>**slerp**(**x**: *vec3*, **y**: *vec3*, **a**: *float*) -\\> *vec3*</code></code>\raw\
\raw\&emsp;&emsp;\raw\Returns Spherical interpolation between two vectors.

